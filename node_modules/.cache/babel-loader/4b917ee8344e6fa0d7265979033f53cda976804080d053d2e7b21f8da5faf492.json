{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Downloads/01-starting-project 2/src/App.js\",\n  _s = $RefreshSig$();\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport uiSlice from './store/ui-slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { sendCartData } from './store/cart-actions';\nimport { Fragment } from 'react';\nimport Notification from './components/UI/Notification';\n//this isInitial variable will not be initialized if the componet renders again\n//  we do not want the empty cart to overwrite the cart in database when useeffect runs the first time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {});\n  useEffect(() => {\n    // dont write async with round brancket in this line , else create new function\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+0lLiRKB8WOzaKnbCMqO0rhbWxM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","uiSlice","useSelector","useDispatch","useEffect","uiActions","sendCartData","Fragment","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","status","title","message"],"sources":["/Users/dev/Downloads/01-starting-project 2/src/App.js"],"sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport uiSlice from './store/ui-slice';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { sendCartData } from './store/cart-actions';\nimport { Fragment } from 'react';\nimport Notification from './components/UI/Notification';\n//this isInitial variable will not be initialized if the componet renders again\n//  we do not want the empty cart to overwrite the cart in database when useeffect runs the first time\nlet isInitial = true;\nfunction App() {\n  const dispatch = useDispatch()\n  const showCart = useSelector(state => state.ui.cartIsVisible)\n  const cart = useSelector((state) => state.cart)\n  const notification = useSelector(state=> state.ui.notification)\n\n\n  useEffect(()=>{\n    \n  })\n  useEffect(()=>{ // dont write async with round brancket in this line , else create new function\n    if (isInitial){\n      isInitial = false\n      return\n    }\n    dispatch(sendCartData(cart))\n}, [cart])\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,8BAA8B;AACvD;AACA;AAAA;AACA,IAAIC,SAAS,GAAG,IAAI;AACpB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC7D,MAAMC,IAAI,GAAGd,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/C,MAAMC,YAAY,GAAGf,WAAW,CAACW,KAAK,IAAGA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;EAG/Db,SAAS,CAAC,MAAI,CAEd,CAAC,CAAC;EACFA,SAAS,CAAC,MAAI;IAAE;IACd,IAAIK,SAAS,EAAC;MACZA,SAAS,GAAG,KAAK;MACjB;IACF;IACAE,QAAQ,CAACL,YAAY,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EACR,oBACE,QAAC,QAAQ;IAAA,WACNC,YAAY,iBAAI,QAAC,YAAY;MAAC,MAAM,EAAEA,YAAY,CAACC,MAAO;MAAC,KAAK,EAAED,YAAY,CAACE,KAAM;MAAC,OAAO,EAAEF,YAAY,CAACG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACxH,QAAC,MAAM;MAAA,WACJR,QAAQ,iBAAI,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEf;AAAC,GA1BQF,GAAG;EAAA,QACOP,WAAW,EACXD,WAAW,EACfA,WAAW,EACHA,WAAW;AAAA;AAAA,KAJzBQ,GAAG;AA4BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}