{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return dispatch => {\n    // putting fetch data in seperate fucntion so i can have try catch block\n    const fetchData = async () => {\n      fetch('https://redux-f30bf-default-rtdb.firebaseio.com/cart.json'); // get request is default\n      if (!response.ok) {\n        throw new Error('could not fetch data ');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      fetchData();\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: \"Error\",\n        title: \"Error!!\",\n        message: \"fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.setNotification({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-f30bf-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      } // put will update the existing data unlike post that will add the data in the list\n      );\n\n      if (!response.ok) {\n        //if the there was an error\n        throw new Error('sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.setNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: \"Error\",\n        title: \"Error!!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","fetch","response","ok","Error","data","json","error","setNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/Users/dev/Downloads/01-starting-project 2/src/store/cart-actions.js"],"sourcesContent":["\nimport { uiActions } from \"./ui-slice\"\n\n\nexport const fetchCartData = ()=>{\n  return dispatch=> {\n    // putting fetch data in seperate fucntion so i can have try catch block\n    const fetchData = async ()=>{\n      fetch('https://redux-f30bf-default-rtdb.firebaseio.com/cart.json')// get request is default\n      if (!response.ok){\n        throw new Error ('could not fetch data ')\n      }\n      const data = await response.json()\n      return data\n    }\n    try{\n      fetchData()\n    }catch(error){\n      dispatch(uiActions.setNotification({\n        status: \"Error\",\n        title: \"Error!!\",\n        message: \"fetching cart data failed!\"\n      }))\n    }\n\n  }\n}\nexport const sendCartData= (cart) => {\n  return async (dispatch) => {\n    dispatch(uiActions.setNotification({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"Sending cart data!\"\n    }))\n\n    const sendRequest = async() =>{\n      const response = await fetch('https://redux-f30bf-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT', body: JSON.stringify(cart)} // put will update the existing data unlike post that will add the data in the list\n      )\n      if(!response.ok){ //if the there was an error\n        throw new Error('sending cart data failed')\n      }\n    }\n    try {\n      await sendRequest()\n      dispatch(uiActions.setNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successfully!\"\n      }))\n    } catch(error) {\n      dispatch(uiActions.setNotification({\n        status: \"Error\",\n        title: \"Error!!\",\n        message: \"Sending cart data failed!\"\n      }))}}}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,YAAY;AAGtC,OAAO,MAAMC,aAAa,GAAG,MAAI;EAC/B,OAAOC,QAAQ,IAAG;IAChB;IACA,MAAMC,SAAS,GAAG,YAAU;MAC1BC,KAAK,CAAC,2DAA2D,CAAC;MAClE,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAC;QACf,MAAM,IAAIC,KAAK,CAAE,uBAAuB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAClC,OAAOD,IAAI;IACb,CAAC;IACD,IAAG;MACDL,SAAS,EAAE;IACb,CAAC,QAAMO,KAAK,EAAC;MACXR,QAAQ,CAACF,SAAS,CAACW,eAAe,CAAC;QACjCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL;EAEF,CAAC;AACH,CAAC;AACD,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAK;EACnC,OAAO,MAAOd,QAAQ,IAAK;IACzBA,QAAQ,CAACF,SAAS,CAACW,eAAe,CAAC;MACjCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMG,WAAW,GAAG,YAAU;MAC5B,MAAMZ,QAAQ,GAAG,MAAMD,KAAK,CAAC,2DAA2D,EAAE;QACxFc,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAAC,CAAC,CAAC;MAAA,CAC5C;;MACD,IAAG,CAACX,QAAQ,CAACC,EAAE,EAAC;QAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMU,WAAW,EAAE;MACnBf,QAAQ,CAACF,SAAS,CAACW,eAAe,CAAC;QACjCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAMJ,KAAK,EAAE;MACbR,QAAQ,CAACF,SAAS,CAACW,eAAe,CAAC;QACjCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IAAA;EAAC,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}