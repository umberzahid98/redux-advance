{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nvar _type = require(\"./type\");\nfunction clear(element) {\n  if (element.tagName !== 'INPUT' && element.tagName !== 'TEXTAREA') {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n  if (element.disabled) return; // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n  const elementType = element.type; // type is a readonly property on textarea, so check if element is an input before trying to modify it\n\n  if (element.tagName === 'INPUT') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    element.type = 'text';\n  }\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: element.selectionStart,\n    initialSelectionEnd: element.selectionEnd\n  });\n  if (element.tagName === 'INPUT') {\n    element.type = elementType;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","clear","_type","require","element","tagName","Error","disabled","elementType","type","delay","initialSelectionStart","selectionStart","initialSelectionEnd","selectionEnd"],"sources":["/Users/dev/Downloads/01-starting-project 2/node_modules/@testing-library/user-event/dist/clear.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\n\nvar _type = require(\"./type\");\n\nfunction clear(element) {\n  if (element.tagName !== 'INPUT' && element.tagName !== 'TEXTAREA') {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n\n  if (element.disabled) return; // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n  const elementType = element.type; // type is a readonly property on textarea, so check if element is an input before trying to modify it\n\n  if (element.tagName === 'INPUT') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    element.type = 'text';\n  }\n\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: element.selectionStart,\n    initialSelectionEnd: element.selectionEnd\n  });\n\n  if (element.tagName === 'INPUT') {\n    element.type = elementType;\n  }\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,KAAK,GAAGA,KAAK;AAErB,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE7B,SAASF,KAAK,CAACG,OAAO,EAAE;EACtB,IAAIA,OAAO,CAACC,OAAO,KAAK,OAAO,IAAID,OAAO,CAACC,OAAO,KAAK,UAAU,EAAE;IACjE;IACA,MAAM,IAAIC,KAAK,CAAC,4DAA4D,CAAC;EAC/E;EAEA,IAAIF,OAAO,CAACG,QAAQ,EAAE,OAAO,CAAC;EAC9B;;EAEA,MAAMC,WAAW,GAAGJ,OAAO,CAACK,IAAI,CAAC,CAAC;;EAElC,IAAIL,OAAO,CAACC,OAAO,KAAK,OAAO,EAAE;IAC/B;IACAD,OAAO,CAACK,IAAI,GAAG,MAAM;EACvB;EAEA,CAAC,CAAC,EAAEP,KAAK,CAACO,IAAI,EAAEL,OAAO,EAAE,kBAAkB,EAAE;IAC3CM,KAAK,EAAE,CAAC;IACRC,qBAAqB,EAAEP,OAAO,CAACQ,cAAc;IAC7CC,mBAAmB,EAAET,OAAO,CAACU;EAC/B,CAAC,CAAC;EAEF,IAAIV,OAAO,CAACC,OAAO,KAAK,OAAO,EAAE;IAC/BD,OAAO,CAACK,IAAI,GAAGD,WAAW;EAC5B;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}