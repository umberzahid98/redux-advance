{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\nexports.specialCharMap = void 0;\nvar _dom = require(\"@testing-library/dom\");\nvar _utils = require(\"./utils\");\nvar _click = require(\"./click\");\nvar _navigationKey = require(\"./keys/navigation-key\");\n\n// TODO: wrap in asyncWrapper\nconst modifierCallbackMap = {\n  ...createModifierCallbackEntries({\n    name: 'shift',\n    key: 'Shift',\n    keyCode: 16,\n    modifierProperty: 'shiftKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'ctrl',\n    key: 'Control',\n    keyCode: 17,\n    modifierProperty: 'ctrlKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'alt',\n    key: 'Alt',\n    keyCode: 18,\n    modifierProperty: 'altKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'meta',\n    key: 'Meta',\n    keyCode: 93,\n    modifierProperty: 'metaKey'\n  }),\n  // capslock is inline because of the need to fire both keydown and keyup on use, while preserving the modifier state.\n  '{capslock}': function capslockOn(_ref) {\n    let {\n      currentElement,\n      eventOverrides\n    } = _ref;\n    const newEventOverrides = {\n      modifierCapsLock: true\n    };\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n    return {\n      eventOverrides: newEventOverrides\n    };\n  },\n  '{/capslock}': function capslockOff(_ref2) {\n    let {\n      currentElement,\n      eventOverrides\n    } = _ref2;\n    const newEventOverrides = {\n      modifierCapsLock: false\n    };\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n};\nconst specialCharMap = {\n  arrowLeft: '{arrowleft}',\n  arrowRight: '{arrowright}',\n  arrowDown: '{arrowdown}',\n  arrowUp: '{arrowup}',\n  enter: '{enter}',\n  escape: '{esc}',\n  delete: '{del}',\n  backspace: '{backspace}',\n  home: '{home}',\n  end: '{end}',\n  selectAll: '{selectall}',\n  space: '{space}',\n  whitespace: ' '\n};\nexports.specialCharMap = specialCharMap;\nconst specialCharCallbackMap = {\n  [specialCharMap.arrowLeft]: (0, _navigationKey.navigationKey)('ArrowLeft'),\n  [specialCharMap.arrowRight]: (0, _navigationKey.navigationKey)('ArrowRight'),\n  [specialCharMap.arrowDown]: handleArrowDown,\n  [specialCharMap.arrowUp]: handleArrowUp,\n  [specialCharMap.home]: (0, _navigationKey.navigationKey)('Home'),\n  [specialCharMap.end]: (0, _navigationKey.navigationKey)('End'),\n  [specialCharMap.enter]: handleEnter,\n  [specialCharMap.escape]: handleEsc,\n  [specialCharMap.delete]: handleDel,\n  [specialCharMap.backspace]: handleBackspace,\n  [specialCharMap.selectAll]: handleSelectall,\n  [specialCharMap.space]: handleSpace,\n  [specialCharMap.whitespace]: handleSpace\n};\nfunction wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n} // this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\n\nasync function type(element, text) {\n  let {\n    delay = 0,\n    ...options\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  let result;\n  if (delay > 0) {\n    await (0, _dom.getConfig)().asyncWrapper(async () => {\n      result = await typeImpl(element, text, {\n        delay,\n        ...options\n      });\n    });\n  } else {\n    result = typeImpl(element, text, {\n      delay,\n      ...options\n    });\n  }\n  return result;\n}\nasync function typeImpl(element, text, _ref3) {\n  let {\n    delay,\n    skipClick = false,\n    skipAutoClose = false,\n    initialSelectionStart,\n    initialSelectionEnd\n  } = _ref3;\n  if (element.disabled) return;\n  if (!skipClick) (0, _click.click)(element);\n  if ((0, _utils.isContentEditable)(element) && document.getSelection().rangeCount === 0) {\n    const range = document.createRange();\n    range.setStart(element, 0);\n    range.setEnd(element, 0);\n    document.getSelection().addRange(range);\n  } // The focused element could change between each event, so get the currently active element each time\n\n  const currentElement = () => (0, _utils.getActiveElement)(element.ownerDocument); // by default, a new element has it's selection start and end at 0\n  // but most of the time when people call \"type\", they expect it to type\n  // at the end of the current input value. So, if the selection start\n  // and end are both the default of 0, then we'll go ahead and change\n  // them to the length of the current value.\n  // the only time it would make sense to pass the initialSelectionStart or\n  // initialSelectionEnd is if you have an input with a value and want to\n  // explicitely start typing with the cursor at 0. Not super common.\n\n  const value = (0, _utils.getValue)(currentElement());\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  if (value != null && selectionStart === 0 && selectionEnd === 0) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), initialSelectionStart != null ? initialSelectionStart : value.length, initialSelectionEnd != null ? initialSelectionEnd : value.length);\n  }\n  const eventCallbacks = queueCallbacks();\n  await runCallbacks(eventCallbacks);\n  function queueCallbacks() {\n    const callbacks = [];\n    let remainingString = text;\n    while (remainingString) {\n      const {\n        callback,\n        remainingString: newRemainingString\n      } = getNextCallback(remainingString, skipAutoClose);\n      callbacks.push(callback);\n      remainingString = newRemainingString;\n    }\n    return callbacks;\n  }\n  async function runCallbacks(callbacks) {\n    const eventOverrides = {};\n    let prevWasMinus, prevWasPeriod, prevValue, typedValue;\n    for (const callback of callbacks) {\n      if (delay > 0) await wait(delay);\n      if (!currentElement().disabled) {\n        const returnValue = callback({\n          currentElement,\n          prevWasMinus,\n          prevWasPeriod,\n          prevValue,\n          eventOverrides,\n          typedValue\n        });\n        Object.assign(eventOverrides, returnValue == null ? void 0 : returnValue.eventOverrides);\n        prevWasMinus = returnValue == null ? void 0 : returnValue.prevWasMinus;\n        prevWasPeriod = returnValue == null ? void 0 : returnValue.prevWasPeriod;\n        prevValue = returnValue == null ? void 0 : returnValue.prevValue;\n        typedValue = returnValue == null ? void 0 : returnValue.typedValue;\n      }\n    }\n  }\n}\nfunction getNextCallback(remainingString, skipAutoClose) {\n  const modifierCallback = getModifierCallback(remainingString, skipAutoClose);\n  if (modifierCallback) {\n    return modifierCallback;\n  }\n  const specialCharCallback = getSpecialCharCallback(remainingString);\n  if (specialCharCallback) {\n    return specialCharCallback;\n  }\n  return getTypeCallback(remainingString);\n}\nfunction getModifierCallback(remainingString, skipAutoClose) {\n  const modifierKey = Object.keys(modifierCallbackMap).find(key => remainingString.startsWith(key));\n  if (!modifierKey) {\n    return null;\n  }\n  const callback = modifierCallbackMap[modifierKey]; // if this modifier has an associated \"close\" callback and the developer\n  // doesn't close it themselves, then we close it for them automatically\n  // Effectively if they send in: '{alt}a' then we type: '{alt}a{/alt}'\n\n  if (!skipAutoClose && callback.closeName && !remainingString.includes(callback.closeName)) {\n    remainingString += callback.closeName;\n  }\n  remainingString = remainingString.slice(modifierKey.length);\n  return {\n    callback,\n    remainingString\n  };\n}\nfunction getSpecialCharCallback(remainingString) {\n  const specialChar = Object.keys(specialCharCallbackMap).find(key => remainingString.startsWith(key));\n  if (!specialChar) {\n    return null;\n  }\n  return {\n    callback: specialCharCallbackMap[specialChar],\n    remainingString: remainingString.slice(specialChar.length)\n  };\n}\nfunction getTypeCallback(remainingString) {\n  const character = remainingString[0];\n  const callback = context => typeCharacter(character, context);\n  return {\n    callback,\n    remainingString: remainingString.slice(1)\n  };\n}\nfunction setSelectionRange(_ref4) {\n  let {\n    currentElement,\n    newValue,\n    newSelectionStart\n  } = _ref4;\n  // if we *can* change the selection start, then we will if the new value\n  // is the same as the current value (so it wasn't programatically changed\n  // when the fireEvent.input was triggered).\n  // The reason we have to do this at all is because it actually *is*\n  // programmatically changed by fireEvent.input, so we have to simulate the\n  // browser's default behavior\n  const value = (0, _utils.getValue)(currentElement());\n  if (value === newValue) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), newSelectionStart, newSelectionStart);\n  } else {\n    // If the currentValue is different than the expected newValue and we *can*\n    // change the selection range, than we should set it to the length of the\n    // currentValue to ensure that the browser behavior is mimicked.\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), value.length, value.length);\n  }\n}\nfunction fireInputEventIfNeeded(_ref5) {\n  let {\n    currentElement,\n    newValue,\n    newSelectionStart,\n    eventOverrides\n  } = _ref5;\n  const prevValue = (0, _utils.getValue)(currentElement());\n  if (!currentElement().readOnly && !(0, _utils.isClickableInput)(currentElement()) && newValue !== prevValue) {\n    if ((0, _utils.isContentEditable)(currentElement())) {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          textContent: newValue\n        },\n        ...eventOverrides\n      });\n    } else {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          value: newValue\n        },\n        ...eventOverrides\n      });\n    }\n    setSelectionRange({\n      currentElement,\n      newValue,\n      newSelectionStart\n    });\n  }\n  return {\n    prevValue\n  };\n}\nfunction typeCharacter(char, _ref6) {\n  let {\n    currentElement,\n    prevWasMinus = false,\n    prevWasPeriod = false,\n    prevValue = '',\n    typedValue = '',\n    eventOverrides\n  } = _ref6;\n  const key = char; // TODO: check if this also valid for characters with diacritic markers e.g. úé etc\n\n  const keyCode = char.charCodeAt(0);\n  let nextPrevWasMinus, nextPrevWasPeriod;\n  const textToBeTyped = typedValue + char;\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n    if ((0, _utils.getValue)(currentElement()) != null && keyPressDefaultNotPrevented) {\n      let newEntry = char;\n      if (prevWasMinus) {\n        newEntry = `-${char}`;\n      } else if (prevWasPeriod) {\n        newEntry = `${prevValue}.${char}`;\n      }\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        newEntry = textToBeTyped;\n      }\n      const timeNewEntry = (0, _utils.buildTimeValue)(textToBeTyped);\n      if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry)) {\n        newEntry = timeNewEntry;\n      }\n      const inputEvent = fireInputEventIfNeeded({\n        ...(0, _utils.calculateNewValue)(newEntry, currentElement()),\n        eventOverrides: {\n          data: key,\n          inputType: 'insertText',\n          ...eventOverrides\n        },\n        currentElement\n      });\n      prevValue = inputEvent.prevValue;\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        _dom.fireEvent.change(currentElement(), {\n          target: {\n            value: textToBeTyped\n          }\n        });\n      }\n      fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry); // typing \"-\" into a number input will not actually update the value\n      // so for the next character we type, the value should be set to\n      // `-${newEntry}`\n      // we also preserve the prevWasMinus when the value is unchanged due\n      // to typing an invalid character (typing \"-a3\" results in \"-3\")\n      // same applies for the decimal character.\n\n      if (currentElement().type === 'number') {\n        const newValue = (0, _utils.getValue)(currentElement());\n        if (newValue === prevValue && newEntry !== '-') {\n          nextPrevWasMinus = prevWasMinus;\n        } else {\n          nextPrevWasMinus = newEntry === '-';\n        }\n        if (newValue === prevValue && newEntry !== '.') {\n          nextPrevWasPeriod = prevWasPeriod;\n        } else {\n          nextPrevWasPeriod = newEntry === '.';\n        }\n      }\n    }\n  }\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  return {\n    prevWasMinus: nextPrevWasMinus,\n    prevWasPeriod: nextPrevWasPeriod,\n    prevValue,\n    typedValue: textToBeTyped\n  };\n}\nfunction fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry) {\n  if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry) && prevValue !== timeNewEntry) {\n    _dom.fireEvent.change(currentElement(), {\n      target: {\n        value: timeNewEntry\n      }\n    });\n  }\n} // yes, calculateNewBackspaceValue and calculateNewValue look extremely similar\n// and you may be tempted to create a shared abstraction.\n// If you, brave soul, decide to so endevor, please increment this count\n// when you inevitably fail: 1\n\nfunction calculateNewBackspaceValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue, newSelectionStart;\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value.slice(0, value.length - 1);\n    newSelectionStart = selectionStart - 1;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value;\n      newSelectionStart = selectionStart;\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value.slice(0, value.length - 1);\n      newSelectionStart = selectionStart - 1;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart - 1) + value.slice(selectionEnd);\n      newSelectionStart = selectionStart - 1;\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n    newSelectionStart = firstPart.length;\n  }\n  return {\n    newValue,\n    newSelectionStart\n  };\n}\nfunction calculateNewDeleteValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue;\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value.slice(1);\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart) + value.slice(selectionEnd + 1);\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n  }\n  return {\n    newValue,\n    newSelectionStart: selectionStart\n  };\n}\nfunction createModifierCallbackEntries(_ref7) {\n  let {\n    name,\n    key,\n    keyCode,\n    modifierProperty\n  } = _ref7;\n  const openName = `{${name}}`;\n  const closeName = `{/${name}}`;\n  function open(_ref8) {\n    let {\n      currentElement,\n      eventOverrides\n    } = _ref8;\n    const newEventOverrides = {\n      [modifierProperty]: true\n    };\n    _dom.fireEvent.keyDown(currentElement(), {\n      key,\n      keyCode,\n      which: keyCode,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n  open.closeName = closeName;\n  function close(_ref9) {\n    let {\n      currentElement,\n      eventOverrides\n    } = _ref9;\n    const newEventOverrides = {\n      [modifierProperty]: false\n    };\n    _dom.fireEvent.keyUp(currentElement(), {\n      key,\n      keyCode,\n      which: keyCode,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n  return {\n    [openName]: open,\n    [closeName]: close\n  };\n}\nfunction handleEnter(_ref10) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref10;\n  const key = 'Enter';\n  const keyCode = 13;\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n    if (keyPressDefaultNotPrevented) {\n      if ((0, _utils.isClickableInput)(currentElement()) ||\n      // Links with href defined should handle Enter the same as a click\n      (0, _utils.isInstanceOfElement)(currentElement(), 'HTMLAnchorElement') && currentElement().href) {\n        _dom.fireEvent.click(currentElement(), {\n          ...eventOverrides\n        });\n      }\n      if (currentElement().tagName === 'TEXTAREA') {\n        const {\n          newValue,\n          newSelectionStart\n        } = (0, _utils.calculateNewValue)('\\n', currentElement());\n        _dom.fireEvent.input(currentElement(), {\n          target: {\n            value: newValue\n          },\n          inputType: 'insertLineBreak',\n          ...eventOverrides\n        });\n        setSelectionRange({\n          currentElement,\n          newValue,\n          newSelectionStart\n        });\n      }\n      if (currentElement().tagName === 'INPUT' && currentElement().form && (currentElement().form.querySelectorAll('input').length === 1 || currentElement().form.querySelector('input[type=\"submit\"]') || currentElement().form.querySelector('button[type=\"submit\"]'))) {\n        _dom.fireEvent.submit(currentElement().form);\n      }\n    }\n  }\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\nfunction handleEsc(_ref11) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref11;\n  const key = 'Escape';\n  const keyCode = 27;\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  }); // NOTE: Browsers do not fire a keypress on meta key presses\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\nfunction handleDel(_ref12) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref12;\n  const key = 'Delete';\n  const keyCode = 46;\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({\n      ...calculateNewDeleteValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentForward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\nfunction handleBackspace(_ref13) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref13;\n  const key = 'Backspace';\n  const keyCode = 8;\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({\n      ...calculateNewBackspaceValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentBackward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\nfunction handleSelectall(_ref14) {\n  let {\n    currentElement\n  } = _ref14;\n  currentElement().setSelectionRange(0, (0, _utils.getValue)(currentElement()).length);\n}\nfunction handleSpace(context) {\n  if ((0, _utils.isClickableInput)(context.currentElement())) {\n    handleSpaceOnClickable(context);\n    return;\n  }\n  typeCharacter(' ', context);\n}\nfunction handleSpaceOnClickable(_ref15) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref15;\n  const key = ' ';\n  const keyCode = 32;\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  if (keyDownDefaultNotPrevented) {\n    _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n  }\n  const keyUpDefaultNotPrevented = _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  if (keyDownDefaultNotPrevented && keyUpDefaultNotPrevented) {\n    _dom.fireEvent.click(currentElement(), {\n      ...eventOverrides\n    });\n  }\n}\nfunction handleArrowDown(_ref16) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref16;\n  const key = 'ArrowDown';\n  const keyCode = 40;\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\nfunction handleArrowUp(_ref17) {\n  let {\n    currentElement,\n    eventOverrides\n  } = _ref17;\n  const key = 'ArrowUp';\n  const keyCode = 38;\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","type","specialCharMap","_dom","require","_utils","_click","_navigationKey","modifierCallbackMap","createModifierCallbackEntries","name","key","keyCode","modifierProperty","capslockOn","currentElement","eventOverrides","newEventOverrides","modifierCapsLock","fireEvent","keyDown","which","keyUp","capslockOff","arrowLeft","arrowRight","arrowDown","arrowUp","enter","escape","delete","backspace","home","end","selectAll","space","whitespace","specialCharCallbackMap","navigationKey","handleArrowDown","handleArrowUp","handleEnter","handleEsc","handleDel","handleBackspace","handleSelectall","handleSpace","wait","time","Promise","resolve","setTimeout","element","text","delay","options","result","getConfig","asyncWrapper","typeImpl","skipClick","skipAutoClose","initialSelectionStart","initialSelectionEnd","disabled","click","isContentEditable","document","getSelection","rangeCount","range","createRange","setStart","setEnd","addRange","getActiveElement","ownerDocument","getValue","selectionStart","selectionEnd","getSelectionRange","setSelectionRangeIfNecessary","length","eventCallbacks","queueCallbacks","runCallbacks","callbacks","remainingString","callback","newRemainingString","getNextCallback","push","prevWasMinus","prevWasPeriod","prevValue","typedValue","returnValue","assign","modifierCallback","getModifierCallback","specialCharCallback","getSpecialCharCallback","getTypeCallback","modifierKey","keys","find","startsWith","closeName","includes","slice","specialChar","character","context","typeCharacter","setSelectionRange","newValue","newSelectionStart","fireInputEventIfNeeded","readOnly","isClickableInput","input","target","textContent","char","charCodeAt","nextPrevWasMinus","nextPrevWasPeriod","textToBeTyped","keyDownDefaultNotPrevented","keyPressDefaultNotPrevented","keyPress","charCode","newEntry","isValidDateValue","timeNewEntry","buildTimeValue","isValidInputTimeValue","inputEvent","calculateNewValue","data","inputType","change","fireChangeForInputTimeIfValid","calculateNewBackspaceValue","firstPart","calculateNewDeleteValue","openName","open","close","isInstanceOfElement","href","tagName","form","querySelectorAll","querySelector","submit","handleSpaceOnClickable","keyUpDefaultNotPrevented"],"sources":["/Users/dev/Downloads/01-starting-project 2/node_modules/@testing-library/user-event/dist/type.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.type = type;\nexports.specialCharMap = void 0;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"./utils\");\n\nvar _click = require(\"./click\");\n\nvar _navigationKey = require(\"./keys/navigation-key\");\n\n// TODO: wrap in asyncWrapper\nconst modifierCallbackMap = { ...createModifierCallbackEntries({\n    name: 'shift',\n    key: 'Shift',\n    keyCode: 16,\n    modifierProperty: 'shiftKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'ctrl',\n    key: 'Control',\n    keyCode: 17,\n    modifierProperty: 'ctrlKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'alt',\n    key: 'Alt',\n    keyCode: 18,\n    modifierProperty: 'altKey'\n  }),\n  ...createModifierCallbackEntries({\n    name: 'meta',\n    key: 'Meta',\n    keyCode: 93,\n    modifierProperty: 'metaKey'\n  }),\n  // capslock is inline because of the need to fire both keydown and keyup on use, while preserving the modifier state.\n  '{capslock}': function capslockOn({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      modifierCapsLock: true\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  },\n  '{/capslock}': function capslockOff({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      modifierCapsLock: false\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key: 'CapsLock',\n      keyCode: 20,\n      which: 20,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n};\nconst specialCharMap = {\n  arrowLeft: '{arrowleft}',\n  arrowRight: '{arrowright}',\n  arrowDown: '{arrowdown}',\n  arrowUp: '{arrowup}',\n  enter: '{enter}',\n  escape: '{esc}',\n  delete: '{del}',\n  backspace: '{backspace}',\n  home: '{home}',\n  end: '{end}',\n  selectAll: '{selectall}',\n  space: '{space}',\n  whitespace: ' '\n};\nexports.specialCharMap = specialCharMap;\nconst specialCharCallbackMap = {\n  [specialCharMap.arrowLeft]: (0, _navigationKey.navigationKey)('ArrowLeft'),\n  [specialCharMap.arrowRight]: (0, _navigationKey.navigationKey)('ArrowRight'),\n  [specialCharMap.arrowDown]: handleArrowDown,\n  [specialCharMap.arrowUp]: handleArrowUp,\n  [specialCharMap.home]: (0, _navigationKey.navigationKey)('Home'),\n  [specialCharMap.end]: (0, _navigationKey.navigationKey)('End'),\n  [specialCharMap.enter]: handleEnter,\n  [specialCharMap.escape]: handleEsc,\n  [specialCharMap.delete]: handleDel,\n  [specialCharMap.backspace]: handleBackspace,\n  [specialCharMap.selectAll]: handleSelectall,\n  [specialCharMap.space]: handleSpace,\n  [specialCharMap.whitespace]: handleSpace\n};\n\nfunction wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n} // this needs to be wrapped in the event/asyncWrapper for React's act and angular's change detection\n// depending on whether it will be async.\n\n\nasync function type(element, text, {\n  delay = 0,\n  ...options\n} = {}) {\n  // we do not want to wrap in the asyncWrapper if we're not\n  // going to actually be doing anything async, so we only wrap\n  // if the delay is greater than 0\n  let result;\n\n  if (delay > 0) {\n    await (0, _dom.getConfig)().asyncWrapper(async () => {\n      result = await typeImpl(element, text, {\n        delay,\n        ...options\n      });\n    });\n  } else {\n    result = typeImpl(element, text, {\n      delay,\n      ...options\n    });\n  }\n\n  return result;\n}\n\nasync function typeImpl(element, text, {\n  delay,\n  skipClick = false,\n  skipAutoClose = false,\n  initialSelectionStart,\n  initialSelectionEnd\n}) {\n  if (element.disabled) return;\n  if (!skipClick) (0, _click.click)(element);\n\n  if ((0, _utils.isContentEditable)(element) && document.getSelection().rangeCount === 0) {\n    const range = document.createRange();\n    range.setStart(element, 0);\n    range.setEnd(element, 0);\n    document.getSelection().addRange(range);\n  } // The focused element could change between each event, so get the currently active element each time\n\n\n  const currentElement = () => (0, _utils.getActiveElement)(element.ownerDocument); // by default, a new element has it's selection start and end at 0\n  // but most of the time when people call \"type\", they expect it to type\n  // at the end of the current input value. So, if the selection start\n  // and end are both the default of 0, then we'll go ahead and change\n  // them to the length of the current value.\n  // the only time it would make sense to pass the initialSelectionStart or\n  // initialSelectionEnd is if you have an input with a value and want to\n  // explicitely start typing with the cursor at 0. Not super common.\n\n\n  const value = (0, _utils.getValue)(currentElement());\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n\n  if (value != null && selectionStart === 0 && selectionEnd === 0) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), initialSelectionStart != null ? initialSelectionStart : value.length, initialSelectionEnd != null ? initialSelectionEnd : value.length);\n  }\n\n  const eventCallbacks = queueCallbacks();\n  await runCallbacks(eventCallbacks);\n\n  function queueCallbacks() {\n    const callbacks = [];\n    let remainingString = text;\n\n    while (remainingString) {\n      const {\n        callback,\n        remainingString: newRemainingString\n      } = getNextCallback(remainingString, skipAutoClose);\n      callbacks.push(callback);\n      remainingString = newRemainingString;\n    }\n\n    return callbacks;\n  }\n\n  async function runCallbacks(callbacks) {\n    const eventOverrides = {};\n    let prevWasMinus, prevWasPeriod, prevValue, typedValue;\n\n    for (const callback of callbacks) {\n      if (delay > 0) await wait(delay);\n\n      if (!currentElement().disabled) {\n        const returnValue = callback({\n          currentElement,\n          prevWasMinus,\n          prevWasPeriod,\n          prevValue,\n          eventOverrides,\n          typedValue\n        });\n        Object.assign(eventOverrides, returnValue == null ? void 0 : returnValue.eventOverrides);\n        prevWasMinus = returnValue == null ? void 0 : returnValue.prevWasMinus;\n        prevWasPeriod = returnValue == null ? void 0 : returnValue.prevWasPeriod;\n        prevValue = returnValue == null ? void 0 : returnValue.prevValue;\n        typedValue = returnValue == null ? void 0 : returnValue.typedValue;\n      }\n    }\n  }\n}\n\nfunction getNextCallback(remainingString, skipAutoClose) {\n  const modifierCallback = getModifierCallback(remainingString, skipAutoClose);\n\n  if (modifierCallback) {\n    return modifierCallback;\n  }\n\n  const specialCharCallback = getSpecialCharCallback(remainingString);\n\n  if (specialCharCallback) {\n    return specialCharCallback;\n  }\n\n  return getTypeCallback(remainingString);\n}\n\nfunction getModifierCallback(remainingString, skipAutoClose) {\n  const modifierKey = Object.keys(modifierCallbackMap).find(key => remainingString.startsWith(key));\n\n  if (!modifierKey) {\n    return null;\n  }\n\n  const callback = modifierCallbackMap[modifierKey]; // if this modifier has an associated \"close\" callback and the developer\n  // doesn't close it themselves, then we close it for them automatically\n  // Effectively if they send in: '{alt}a' then we type: '{alt}a{/alt}'\n\n  if (!skipAutoClose && callback.closeName && !remainingString.includes(callback.closeName)) {\n    remainingString += callback.closeName;\n  }\n\n  remainingString = remainingString.slice(modifierKey.length);\n  return {\n    callback,\n    remainingString\n  };\n}\n\nfunction getSpecialCharCallback(remainingString) {\n  const specialChar = Object.keys(specialCharCallbackMap).find(key => remainingString.startsWith(key));\n\n  if (!specialChar) {\n    return null;\n  }\n\n  return {\n    callback: specialCharCallbackMap[specialChar],\n    remainingString: remainingString.slice(specialChar.length)\n  };\n}\n\nfunction getTypeCallback(remainingString) {\n  const character = remainingString[0];\n\n  const callback = context => typeCharacter(character, context);\n\n  return {\n    callback,\n    remainingString: remainingString.slice(1)\n  };\n}\n\nfunction setSelectionRange({\n  currentElement,\n  newValue,\n  newSelectionStart\n}) {\n  // if we *can* change the selection start, then we will if the new value\n  // is the same as the current value (so it wasn't programatically changed\n  // when the fireEvent.input was triggered).\n  // The reason we have to do this at all is because it actually *is*\n  // programmatically changed by fireEvent.input, so we have to simulate the\n  // browser's default behavior\n  const value = (0, _utils.getValue)(currentElement());\n\n  if (value === newValue) {\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), newSelectionStart, newSelectionStart);\n  } else {\n    // If the currentValue is different than the expected newValue and we *can*\n    // change the selection range, than we should set it to the length of the\n    // currentValue to ensure that the browser behavior is mimicked.\n    (0, _utils.setSelectionRangeIfNecessary)(currentElement(), value.length, value.length);\n  }\n}\n\nfunction fireInputEventIfNeeded({\n  currentElement,\n  newValue,\n  newSelectionStart,\n  eventOverrides\n}) {\n  const prevValue = (0, _utils.getValue)(currentElement());\n\n  if (!currentElement().readOnly && !(0, _utils.isClickableInput)(currentElement()) && newValue !== prevValue) {\n    if ((0, _utils.isContentEditable)(currentElement())) {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          textContent: newValue\n        },\n        ...eventOverrides\n      });\n    } else {\n      _dom.fireEvent.input(currentElement(), {\n        target: {\n          value: newValue\n        },\n        ...eventOverrides\n      });\n    }\n\n    setSelectionRange({\n      currentElement,\n      newValue,\n      newSelectionStart\n    });\n  }\n\n  return {\n    prevValue\n  };\n}\n\nfunction typeCharacter(char, {\n  currentElement,\n  prevWasMinus = false,\n  prevWasPeriod = false,\n  prevValue = '',\n  typedValue = '',\n  eventOverrides\n}) {\n  const key = char; // TODO: check if this also valid for characters with diacritic markers e.g. úé etc\n\n  const keyCode = char.charCodeAt(0);\n  let nextPrevWasMinus, nextPrevWasPeriod;\n  const textToBeTyped = typedValue + char;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n\n    if ((0, _utils.getValue)(currentElement()) != null && keyPressDefaultNotPrevented) {\n      let newEntry = char;\n\n      if (prevWasMinus) {\n        newEntry = `-${char}`;\n      } else if (prevWasPeriod) {\n        newEntry = `${prevValue}.${char}`;\n      }\n\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        newEntry = textToBeTyped;\n      }\n\n      const timeNewEntry = (0, _utils.buildTimeValue)(textToBeTyped);\n\n      if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry)) {\n        newEntry = timeNewEntry;\n      }\n\n      const inputEvent = fireInputEventIfNeeded({ ...(0, _utils.calculateNewValue)(newEntry, currentElement()),\n        eventOverrides: {\n          data: key,\n          inputType: 'insertText',\n          ...eventOverrides\n        },\n        currentElement\n      });\n      prevValue = inputEvent.prevValue;\n\n      if ((0, _utils.isValidDateValue)(currentElement(), textToBeTyped)) {\n        _dom.fireEvent.change(currentElement(), {\n          target: {\n            value: textToBeTyped\n          }\n        });\n      }\n\n      fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry); // typing \"-\" into a number input will not actually update the value\n      // so for the next character we type, the value should be set to\n      // `-${newEntry}`\n      // we also preserve the prevWasMinus when the value is unchanged due\n      // to typing an invalid character (typing \"-a3\" results in \"-3\")\n      // same applies for the decimal character.\n\n      if (currentElement().type === 'number') {\n        const newValue = (0, _utils.getValue)(currentElement());\n\n        if (newValue === prevValue && newEntry !== '-') {\n          nextPrevWasMinus = prevWasMinus;\n        } else {\n          nextPrevWasMinus = newEntry === '-';\n        }\n\n        if (newValue === prevValue && newEntry !== '.') {\n          nextPrevWasPeriod = prevWasPeriod;\n        } else {\n          nextPrevWasPeriod = newEntry === '.';\n        }\n      }\n    }\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  return {\n    prevWasMinus: nextPrevWasMinus,\n    prevWasPeriod: nextPrevWasPeriod,\n    prevValue,\n    typedValue: textToBeTyped\n  };\n}\n\nfunction fireChangeForInputTimeIfValid(currentElement, prevValue, timeNewEntry) {\n  if ((0, _utils.isValidInputTimeValue)(currentElement(), timeNewEntry) && prevValue !== timeNewEntry) {\n    _dom.fireEvent.change(currentElement(), {\n      target: {\n        value: timeNewEntry\n      }\n    });\n  }\n} // yes, calculateNewBackspaceValue and calculateNewValue look extremely similar\n// and you may be tempted to create a shared abstraction.\n// If you, brave soul, decide to so endevor, please increment this count\n// when you inevitably fail: 1\n\n\nfunction calculateNewBackspaceValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue, newSelectionStart;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value.slice(0, value.length - 1);\n    newSelectionStart = selectionStart - 1;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value;\n      newSelectionStart = selectionStart;\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value.slice(0, value.length - 1);\n      newSelectionStart = selectionStart - 1;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart - 1) + value.slice(selectionEnd);\n      newSelectionStart = selectionStart - 1;\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n    newSelectionStart = firstPart.length;\n  }\n\n  return {\n    newValue,\n    newSelectionStart\n  };\n}\n\nfunction calculateNewDeleteValue(element) {\n  const {\n    selectionStart,\n    selectionEnd\n  } = (0, _utils.getSelectionRange)(element);\n  const value = (0, _utils.getValue)(element);\n  let newValue;\n\n  if (selectionStart === null) {\n    // at the end of an input type that does not support selection ranges\n    // https://github.com/testing-library/user-event/issues/316#issuecomment-639744793\n    newValue = value;\n  } else if (selectionStart === selectionEnd) {\n    if (selectionStart === 0) {\n      // at the beginning of the input\n      newValue = value.slice(1);\n    } else if (selectionStart === value.length) {\n      // at the end of the input\n      newValue = value;\n    } else {\n      // in the middle of the input\n      newValue = value.slice(0, selectionStart) + value.slice(selectionEnd + 1);\n    }\n  } else {\n    // we have something selected\n    const firstPart = value.slice(0, selectionStart);\n    newValue = firstPart + value.slice(selectionEnd);\n  }\n\n  return {\n    newValue,\n    newSelectionStart: selectionStart\n  };\n}\n\nfunction createModifierCallbackEntries({\n  name,\n  key,\n  keyCode,\n  modifierProperty\n}) {\n  const openName = `{${name}}`;\n  const closeName = `{/${name}}`;\n\n  function open({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      [modifierProperty]: true\n    };\n\n    _dom.fireEvent.keyDown(currentElement(), {\n      key,\n      keyCode,\n      which: keyCode,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n\n  open.closeName = closeName;\n\n  function close({\n    currentElement,\n    eventOverrides\n  }) {\n    const newEventOverrides = {\n      [modifierProperty]: false\n    };\n\n    _dom.fireEvent.keyUp(currentElement(), {\n      key,\n      keyCode,\n      which: keyCode,\n      ...eventOverrides,\n      ...newEventOverrides\n    });\n\n    return {\n      eventOverrides: newEventOverrides\n    };\n  }\n\n  return {\n    [openName]: open,\n    [closeName]: close\n  };\n}\n\nfunction handleEnter({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Enter';\n  const keyCode = 13;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    const keyPressDefaultNotPrevented = _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n\n    if (keyPressDefaultNotPrevented) {\n      if ((0, _utils.isClickableInput)(currentElement()) || // Links with href defined should handle Enter the same as a click\n      (0, _utils.isInstanceOfElement)(currentElement(), 'HTMLAnchorElement') && currentElement().href) {\n        _dom.fireEvent.click(currentElement(), { ...eventOverrides\n        });\n      }\n\n      if (currentElement().tagName === 'TEXTAREA') {\n        const {\n          newValue,\n          newSelectionStart\n        } = (0, _utils.calculateNewValue)('\\n', currentElement());\n\n        _dom.fireEvent.input(currentElement(), {\n          target: {\n            value: newValue\n          },\n          inputType: 'insertLineBreak',\n          ...eventOverrides\n        });\n\n        setSelectionRange({\n          currentElement,\n          newValue,\n          newSelectionStart\n        });\n      }\n\n      if (currentElement().tagName === 'INPUT' && currentElement().form && (currentElement().form.querySelectorAll('input').length === 1 || currentElement().form.querySelector('input[type=\"submit\"]') || currentElement().form.querySelector('button[type=\"submit\"]'))) {\n        _dom.fireEvent.submit(currentElement().form);\n      }\n    }\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleEsc({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Escape';\n  const keyCode = 27;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  }); // NOTE: Browsers do not fire a keypress on meta key presses\n\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleDel({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Delete';\n  const keyCode = 46;\n\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({ ...calculateNewDeleteValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentForward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleBackspace({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'Backspace';\n  const keyCode = 8;\n\n  const keyPressDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyPressDefaultNotPrevented) {\n    fireInputEventIfNeeded({ ...calculateNewBackspaceValue(currentElement()),\n      eventOverrides: {\n        inputType: 'deleteContentBackward',\n        ...eventOverrides\n      },\n      currentElement\n    });\n  }\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleSelectall({\n  currentElement\n}) {\n  currentElement().setSelectionRange(0, (0, _utils.getValue)(currentElement()).length);\n}\n\nfunction handleSpace(context) {\n  if ((0, _utils.isClickableInput)(context.currentElement())) {\n    handleSpaceOnClickable(context);\n    return;\n  }\n\n  typeCharacter(' ', context);\n}\n\nfunction handleSpaceOnClickable({\n  currentElement,\n  eventOverrides\n}) {\n  const key = ' ';\n  const keyCode = 32;\n\n  const keyDownDefaultNotPrevented = _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented) {\n    _dom.fireEvent.keyPress(currentElement(), {\n      key,\n      keyCode,\n      charCode: keyCode,\n      ...eventOverrides\n    });\n  }\n\n  const keyUpDefaultNotPrevented = _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  if (keyDownDefaultNotPrevented && keyUpDefaultNotPrevented) {\n    _dom.fireEvent.click(currentElement(), { ...eventOverrides\n    });\n  }\n}\n\nfunction handleArrowDown({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'ArrowDown';\n  const keyCode = 40;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}\n\nfunction handleArrowUp({\n  currentElement,\n  eventOverrides\n}) {\n  const key = 'ArrowUp';\n  const keyCode = 38;\n\n  _dom.fireEvent.keyDown(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n\n  _dom.fireEvent.keyUp(currentElement(), {\n    key,\n    keyCode,\n    which: keyCode,\n    ...eventOverrides\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}