{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Downloads/01-starting-project 2/src/App.js\",\n  _s = $RefreshSig$();\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport uiSlice from './store/ui-slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    // dont write async with round brancket in this line , else create new function\n    const sendCartData = async () => {\n      dispatch(uiActions.setNotification());\n      const response = await fetch('https://redux-f30bf-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      } // put will update the existing data unlike post that will add the data in the list\n      );\n\n      if (!response.ok) {\n        //if the there was an error\n        throw new Error('sending cart data failed');\n      }\n      // code will make part this line if there is no error above\n      const responseData = await response.json();\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M1A++yNtoifZBUfaWzkNdOhatC4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","uiSlice","useSelector","useDispatch","useEffect","uiActions","App","dispatch","showCart","state","ui","cartIsVisible","cart","sendCartData","setNotification","response","fetch","method","body","JSON","stringify","ok","Error","responseData","json"],"sources":["/Users/dev/Downloads/01-starting-project 2/src/App.js"],"sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport uiSlice from './store/ui-slice';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const showCart = useSelector(state => state.ui.cartIsVisible)\n  const cart = useSelector((state) => state.cart)\n  useEffect(()=>{ // dont write async with round brancket in this line , else create new function\n    const sendCartData = async() => {\n      dispatch(uiActions.setNotification())\n      const response = await fetch('https://redux-f30bf-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT', body: JSON.stringify(cart)} // put will update the existing data unlike post that will add the data in the list\n    )\n    if(!response.ok){ //if the there was an error\n      throw new Error('sending cart data failed')\n    }\n    // code will make part this line if there is no error above\n    const responseData = await response.json()\n  }\n}, [cart])\n  return (\n    <Layout>\n\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAG7C,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC7D,MAAMC,IAAI,GAAGV,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/CR,SAAS,CAAC,MAAI;IAAE;IACd,MAAMS,YAAY,GAAG,YAAW;MAC9BN,QAAQ,CAACF,SAAS,CAACS,eAAe,EAAE,CAAC;MACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2D,EAAE;QACxFC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAAC,CAAC,CAAC;MAAA,CAC9C;;MACD,IAAG,CAACG,QAAQ,CAACM,EAAE,EAAC;QAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA;MACA,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;IAC5C,CAAC;EACH,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EACR,oBACE,QAAC,MAAM;IAAA,WAEJJ,QAAQ,iBAAI,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACrB,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEb;AAAC,GAxBQF,GAAG;EAAA,QACOH,WAAW,EACXD,WAAW,EACfA,WAAW;AAAA;AAAA,KAHjBI,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}